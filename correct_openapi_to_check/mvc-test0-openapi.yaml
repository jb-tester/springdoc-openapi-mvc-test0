openapi: 3.0.1
info:
  title: mvc-test0 openapi
  description: test swagger annotations on endpoints
  license:
    name: personal ip license
    url: https://ip.me
  version: 1.6.14
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: test1_tag
    description: test1 tag description
  - name: test0_tag1
    description: test0 tag1 description
  - name: test0_tag2
    description: test0 tag2 description
  - name: controller_tag1
    description: description for controller_tag1
  - name: controller_tag2
    description: description for controller_tag2
paths:
  /withOperation/exception:
    post:
      tags:
        - controllers-with-operation
      summary: Trigger an exception
      operationId: throwException
      parameters:
        - name: message
          in: query
          description: Exception message
          required: false
          schema:
            type: string
            default: test exception
      responses:
        "403":
          description: oops
  /withTags/test2:
    get:
      tags:
        - controller_tag1
        - controller_tag2
      operationId: test2_method
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /withTags/test1:
    get:
      tags:
        - controller_tag1
        - controller_tag2
        - test1_tag
      operationId: test1_method
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /withTags/test0:
    get:
      tags:
        - test0_tag1
        - test0_tag2
        - controller_tag1
        - controller_tag2
      operationId: test0_method
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /withOperation/test2:
    get:
      tags:
        - controllers-with-operation
      operationId: test2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /withOperation/test1:
    get:
      tags:
        - foo
      summary: test1_operation
      description: test1_operation_description
      operationId: test1_id
      parameters:
        - name: dummy
          in: query
          description: dummy parameter
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components: { }
